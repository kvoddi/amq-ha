Project Title: Mainframe Data Migration to Distributed Systems using Kafka Connect

Project Description:
In this project, I successfully led the migration of critical mainframe data to distributed systems via Kafka Connect. This solution involved complex configurations and system integrations demonstrating my expertise in multiple technology stacks.

Project Overview:

Objective: Migrate data from a mainframe system within a large bank to distributed systems for modernization, resliency and cost optimization.

Technologies Used:
 * Apache Kafka
 * Kafka Connect
 * Apigee API gatway
 * IBM z/OS (Mainframe)
 * Distributed systems (SQL Databases)
 * Java applications.
 * Opentelemetry Observability Stack
 * IBM MQ

Solution Architecture:

The solution architecture was designed to move mainframe data to SQL DB and configuring applications to route readonly calls to SQL DBs. We needed ensure data integrity, provide real-time movement of mainframe data to distributed systems with 500 ms latency. It included the following components:
Component	Description
Kafka Cluster - >	A multi-node Kafka cluster for data ingestion and distribution.
Kafka Connect - >	Connector framework for extracting data from the mainframe, transforming it, and delivering it to various distributed systems.
Data Producers - > (Kafka Connect Source Connectors)	Configured to extract data from mainframe sources.
Data Consumers -> (Kafka Connect Sink Connectors)	Routed data to the target systems(SQL databases)
Apigree gatway -> Route calls to mainframe if the data migration latency was high.
Observability Stack - > Monitor data movenement latency,Kafka and Kafka Connectors.
Java application - > The application would let us control client traffic flowing to Mainframe vs distributed systems.(This application would update the Apigee proxy configuration)
Mainframe Z/Linux - > installation of connectors on Z/Linux to read from IBM MQ.

Implementation:

The project involved the following key implementation steps:

Kafka Cluster and Kafka Connect Setup:
Provisioned and configured a Kafka cluster along with Kafka Connect.
Defined source connectors to extract data from the mainframe and write to SQL DB.

Data Transformation and Routing:
Applied transformations to convert mainframe data into a format suitable for the target systems.
Configured Kafka Connect sink connectors to route data to the desired distributed systems.

Data Validation and Monitoring:
Implemented data validation mechanisms to ensure data consistency using schema registry.
Monitored the entire data migration process for accuracy and completeness, we used prometheus/grafana and Loki to monitor the system.

Java Application & Apigee gateway:
This application as a failsafe mechanism, we could control the client calls going to mainframe system and distribued systems.Ex: 80 % to mainframe and 20 % to SQL DB.

Key Achievements:
Successful create a mainframe data to distributed systems migration pattern.
High data accuracy and reliability throughout the migration process.
Real-time access to mainframe data for analytics and decision-making.
Scalable and extensible architecture for future data integration needs.

Results and Benefits:
Enabled the bank to modernize its data infrastructure and leverage distributed systems with the evntual goal of moving away from mainframe systems.
Real-time access to previously siloed mainframe data.
Reduced consumption of MIPS on mainframe system.

Conclusion:
This project showcases my ability to build and configure complex solutions, conduct system integrations, and design solution architectures using Apache Kafka, with a specific focus on migrating data from a mainframe to distributed systems using Kafka Connect. The successful completion of this project has brought significant benefits to the bank and demonstrated my expertise in Kafka technology and data migration.

Note : The data migration could have also been done with CDC, we looked into several systems like HVR/Debezium and Qlik but there were complex to setup and expensive for the data volumes we were planning to move. 
